#! /bin/bash
installPath="INSTALLPATH"
riscvPath="RISCVPATH"
testDir=$installPath/test_src
tempDir=$installPath/temp
logDir=$installPath/log
interval=5m #INTERVAL
ftpRoot="FTPROOT"
ftpTemp=$ftpRoot/temp
userName="USERNAME"
cpTimeOut="20"
runTimeOut="10" #Time Unit: second
SID=$RANDOM

checkRun(){
	$*
	errCodeRun=$?
	if [ $errCodeRun != 0 ]
	then 
		echo "[`date`][SID] Error occurred while executing command line: \"$*\". Returned with error code ($errCodeRun)"
		exit
	fi
}

timeTransform(){
	arg=$1
	wordCount=${#arg}
	postfix=${arg:$[wordCount - 1]:1}
	arg=`echo $arg | sed "s/$postfix//g"`
	case $postfix in
	m) echo "-mmin -$arg";;
	h) echo "-mmin -$[arg * 60]";;
	d) echo "-mtime -$arg";;
	*) exit;;
	esac
}

intervalArg=`timeTransform $interval`

checkLab(){
	riscv32Dir=$ftpRoot/$stuID/riscv32
	empty=`checkRun ls $riscv32Dir`
	changeFlag=`checkRun find $riscv32Dir $intervalArg`
	#echo "find $riscv32Dir $intervalArg"
	if [ "${changeFlag}x" != x -a "${empty}x" != x ]
	then 
		# Start compiling
		echo -e "  Check report for lab \"riscv32\":\n" > $logDir/riscv32.rep
		echo "[`date`][$SID] Found changes with file(s) from $riscv32Dir, start compiling!"
		checkRun "cd $riscv32Dir"
		fileList=(`ls`)
		if [ "`echo ${changeFlag[*]} | grep tar`x" != x -o ${#fileList[*]} = 1 ]
		then uncompressFlag=1
		else uncompressFlag=0
		fi
		if [ -f ./$stuID.tar -a $uncompressFlag = 1 ]
		then 
			echo -e "cd $riscv32Dir\ntar -xf ./$stuID.tar" | su - $userName
			errCode=$?
			if [ $errCode != 0 ]
			then
				mailFormat=UNCOMPRESS_ERROR
				echo "Error: Error(s) occurred while uncompressing your tar file!" >> $logDir/riscv32.rep
				echo "[`date`][$SID] Error(s) occurred while uncompressing for student[$stuID]!"
				return
			fi
			if [ -d ./$stuID ]
			then echo -e "cd $riscv32Dir\ncp -r ./$stuID/* ./" | su - $userName
			fi
		fi
		
		$installPath/scripts/secure_mode -start
		if [ -f ./makefile -o -f ./Makefile ]
		then echo -e "cd $riscv32Dir\nmake" | timeout -k $cpTimeOut su - $userName > $tempDir/compile_riscv32.log 2>&1 
		elif [ -f ./compile ]
		then 
			chmod +x ./compile
			sed -i 's///g' ./compile
			echo -e "cd $riscv32Dir\nbash ./compile" | timeout -k $cpTimeOut su - $userName > $tempDir/compile_riscv32.log 2>&1
		else 
			mailFormat=NO_COMPILE_METHOD
			echo "Error: Cann't find an appropriate method to compile your source file!" >> $logDir/riscv32.rep
			echo "[`date`][$SID] No method found to compile source file while testing student[$stuID]!"
			$installPath/scripts/secure_mode -stop
			return
		fi
		errCode=$?
		if [ $errCode = 124 ]
		then 
			mailFormat=COMPILE_TIMEOUT
			echo "Error: Timelimit exceeded while compiling your source file!" >> $logDir/riscv32.rep
			echo "[`date`][$SID] Timeout while compiling for student[$stuID]"
			$installPath/scripts/secure_mode -stop
			checkRun cp $tempDir/compile_riscv32.log ./
			return
		elif [ $errCode != 0 ]
		then 
			mailFormat=COMPILE_ERROR
			echo "Error: We have encountered with some problems compiling your source files! You may find more details below or in the file attached with this email!" >> $logDir/riscv32.rep
			echo "[`date`][$SID] Error(s) occurred while compiling for student[$stuID]"
			$installPath/scripts/secure_mode -stop
			checkRun cp $tempDir/compile_riscv32.log ./
			return
		fi
		checkRun cp $tempDir/compile_riscv32.log ./

		# Start test
		if [ ! -f ./riscv32C ] && [ ! -f ./riscv32 -o ! -f ./tigger -o ! -f ./eeyore ]
		then 
			mailFormat=NO_BINARY_FILE
			echo "Error: Can not locate all the binary files \"eeyore, tigger, riscv32\" or \"riscv32C\"needed for compilation!" >> $logDir/riscv32.rep
			echo "[`date`][$SID] Cannot locate binary file compiled with compiling method for student[$stuID]"
			$installPath/scripts/secure_mode -stop
			return
		fi
		for file in $testDir/*.c
		do
			testName=(`basename $file | sed 's/\./ /g'`)
			checkRun cp $file $ftpTemp/test_$SID.c
			checkRun rm -f ./compile_riscv32_*.log
			checkRun rm -f ./simulate_riscv32.log
			
			if [ -f ./riscv32C ]
			then
				# Use riscv32C compile C file
				checkRun chmod 555 -R $riscv32Dir
				echo -e "cd $riscv32Dir\n./riscv32C < $ftpTemp/test_$SID.c" | timeout -k $runTimeOut su - $userName  > $ftpTemp/test_$SID.s 2> $tempDir/compile_riscv32_c2s.log
				errCode=$?
				checkRun chmod 777 -R $riscv32Dir
				checkRun cp $tempDir/compile_riscv32_c2s.log $tempDir/compile_riscv32_runtime.log
				if [ $errCode = 124 ]
				then 
					mailFormat=RUN_TIMEOUT
					echo "Error: Timelimit exceeded while compile MiniC file \"${testName}.c\" to assemble language with your executable file!" >> $logDir/riscv32.rep
					echo "[`date`][$SID] Timelimit exceeded while running riscv32C for \"${testName}.c\" with student[$stuID]'s riscv32C"
					$installPath/scripts/secure_mode -stop
					checkRun cp $tempDir/compile_riscv32_c2s.log ./
					return
				elif [ $errCode != 0 ]
				then
					mailFormat=RUNTIME_ERROR
					echo "Error: Runtime error occurred while compiling MiniC file \"${testName}.c\" to assemble language with your excutable file! You may find more details below or in the file attached with this email." >> $logDir/riscv32.rep
					echo "[`date`][$SID] Runtime error occurred while running riscv32C for \"${testName}.c\" with student[$stuID]'s riscv32C"
					$installPath/scripts/secure_mode -stop
					checkRun cp $tempDir/compile_riscv32_c2s.log ./
					return
				fi
				# checkRun cp $tempDir/compile_riscv32_c2s.log ./
			else
				# Use eeyore compile C file
				checkRun chmod 555 -R $riscv32Dir
				echo -e "cd $riscv32Dir\n./eeyore < $ftpTemp/test_$SID.c" | timeout -k $runTimeOut su - $userName  > $ftpTemp/test_$SID.e 2> $tempDir/compile_riscv32_c2e.log
				errCode=$?
				checkRun chmod 777 -R $riscv32Dir
				checkRun cp $tempDir/compile_riscv32_c2e.log $tempDir/compile_riscv32_runtime.log
				if [ $errCode = 124 ]
				then 
					mailFormat=RUN_TIMEOUT
					echo "Error: Timelimit exceeded while compile MiniC file \"${testName}.c\" to eeyore with your executable file!" >> $logDir/riscv32.rep
					echo "[`date`][$SID] Timelimit exceeded while running eeyore for \"${testName}.c\" with student[$stuID]'s eeyore"
					$installPath/scripts/secure_mode -stop
					checkRun cp $tempDir/compile_riscv32_c2e.log ./
					return
				elif [ $errCode != 0 ]
				then
					mailFormat=RUNTIME_ERROR
					echo "Error: Runtime error occurred while compiling MiniC file \"${testName}.c\" to eeyore with your excutable file! You may find more details below or in the file attached with this email." >> $logDir/riscv32.rep
					echo "[`date`][$SID] Runtime error occurred while running eeyore for \"${testName}.c\" with student[$stuID]'s eeyore"
					$installPath/scripts/secure_mode -stop
					checkRun cp $tempDir/compile_riscv32_c2e.log ./
					return
				fi
				# checkRun cp $tempDir/compile_riscv32_c2e.log ./
			
				# Use tigger compile eeyore file
				checkRun chmod 555 -R $riscv32Dir
				echo -e "cd $riscv32Dir\n./tigger < $ftpTemp/test_$SID.e" | timeout -k $runTimeOut su - $userName  > $ftpTemp/test_$SID.t 2> $tempDir/compile_riscv32_e2t.log
				errCode=$?
				checkRun chmod 777 -R $riscv32Dir
				checkRun cp $tempDir/compile_riscv32_e2t.log $tempDir/compile_riscv32_runtime.log
				if [ $errCode = 124 ]
				then 
					mailFormat=RUN_TIMEOUT
					echo "Error: Timelimit exceeded while compile eeyore file \"${testName}.e\" to tigger with your executable file!" >> $logDir/riscv32.rep
					echo "[`date`][$SID] Timelimit exceeded while running tigger for \"${testName}.e\" with student[$stuID]'s tigger"
					$installPath/scripts/secure_mode -stop
					checkRun cp $tempDir/compile_riscv32_e2t.log ./
					return
				elif [ $errCode != 0 ]
				then
					mailFormat=RUNTIME_ERROR
					echo "Error: Runtime error occurred while compiling eeyore file \"${testName}.e\" to tigger with your excutable file! You may find more details below or in the file attached with this email." >> $logDir/riscv32.rep
					echo "[`date`][$SID] Runtime error occurred while running tigger for \"${testName}.e\" with student[$stuID]'s tigger"
					$installPath/scripts/secure_mode -stop
					checkRun cp $tempDir/compile_riscv32_e2t.log ./
					return
				fi
				# checkRun cp $tempDir/compile_riscv32_e2t.log ./

				# Use riscv32 compile tigger file
				checkRun chmod 555 -R $riscv32Dir
				echo -e "cd $riscv32Dir\n./riscv32 < $ftpTemp/test_$SID.t" | timeout -k $runTimeOut su - $userName  > $ftpTemp/test_$SID.s 2> $tempDir/compile_riscv32_t2s.log
				errCode=$?
				checkRun chmod 777 -R $riscv32Dir
				checkRun cp $tempDir/compile_riscv32_t2s.log $tempDir/compile_riscv32_runtime.log
				if [ $errCode = 124 ]
				then 
					mailFormat=RUN_TIMEOUT
					echo "Error: Timelimit exceeded while compile tigger file \"${testName}.t\" to assemble language with your executable file!" >> $logDir/riscv32.rep
					echo "[`date`][$SID] Timelimit exceeded while running riscv32 for \"${testName}.t\" with student[$stuID]'s riscv32"
					$installPath/scripts/secure_mode -stop
					checkRun cp $tempDir/compile_riscv32_t2s.log ./
					return
				elif [ $errCode != 0 ]
				then
					mailFormat=RUNTIME_ERROR
					echo "Error: Runtime error occurred while compiling tigger file \"${testName}.t\" to assemble language with your excutable file! You may find more details below or in the file attached with this email." >> $logDir/riscv32.rep
					echo "[`date`][$SID] Runtime error occurred while running riscv32 for \"${testName}.t\" with student[$stuID]'s riscv32"
					$installPath/scripts/secure_mode -stop
					checkRun cp $tempDir/compile_riscv32_t2s.log ./
					return
				fi
				# checkRun cp $tempDir/compile_riscv32_t2s.log ./
			fi
			$installPath/scripts/secure_mode -stop
			
			# Compiling assemble language to machine language
			timeout -k $runTimeOut $riscvPath/riscv32-unknown-linux-gnu-gcc $ftpTemp/test_$SID.s $installPath/lib/lib32.s -static -o $ftpTemp/test_$SID > $tempDir/compile_riscv32_s2o.log 2>&1
			errCode=$?
			checkRun cp $tempDir/compile_riscv32_s2o.log $tempDir/compile_riscv32_runtime.log
			if [ $errCode = 124 ]
			then 
				mailFormat=COMPILE_ASSEMBLE_TIMEOUT
				echo "Error: Timelimit exceeded while compiling S file \"${testName}.s\" to ELF file with \"riscv32-unknown-elf-gcc\"!" >> $logDir/riscv32.rep
				echo "[`date`][$SID] Timelimit exceeded while compiling assemble language for \"${testName}.c\" with \"riscv32-unknown-elf-gcc\""
				checkRun cp $tempDir/compile_riscv32_s2o.log ./
				return
			elif [ $errCode != 0 ]
			then
				mailFormat=COMPILE_ASSEMBLE_ERROR
				echo "Error: Error(s) occurred while compiling S file \"${testName}.s\" to ELF file with \"riscv32-unknown-elf-gcc\"! You may find more details below or in the file attached with this email." >> $logDir/riscv32.rep
				echo "[`date`][$SID] Runtime error occurred while compiling assemble languange for \"${testName}.c\" with \"riscv32-unknown-elf-gcc\""
				checkRun cp $tempDir/compile_riscv32_s2o.log ./
				return
			fi
			checkRun cp $tempDir/compile_riscv32_s2o.log ./

			# Simulating riscv32 elf file
			if [ -f $testDir/$testName.input ]
			then timeout -k $runTimeOut sudo $riscvPath/riscv32-unknown-linux-gnu-run $ftpTemp/test_$SID < $testDir/$testName.input > $tempDir/${testName}_$SID.result 2> $tempDir/simulate_riscv32.log
			else timeout -k $runTimeOut sudo $riscvPath/riscv32-unknown-linux-gnu-run $tempDir/${testName}_$SID > $tempDir/${testName}_$SID.result 2> $tempDir/simulate_riscv32.log
			fi
			errCode=$?
			if [ $errCode = 124 ]
			then
				mailFormat=SIM_TIMEOUT
				echo "Error: Timelimit exceeded while simulating \"${testName}.c\" with the riscv32 code generated!" >> $logDir/riscv32.rep
				echo "[`date`][$SID] Timelimit exceeded while simulating \"${testName}.c\" for student[$stuID]"
				checkRun cp $tempDir/simulate_riscv32.log ./
				return
			fi
			if [ -s $tempDir/simulate_riscv32.log ]
			then
				mailFormat=SIM_ERROR
				echo "Error: Runtime occurred while simulating \"${testName}.c\" with the eeyore code generated!" >> $logDir/riscv32.rep
				echo "[`date`][$SID] Runtime error occurred while simulating \"${testName}.c\" for student[$stuID]"
				checkRun cp $tempDir/simulate_riscv32.log ./
				return
			fi
			echo $errCode >> $tempDir/${testName}_$SID.result
			checkRun cp $tempDir/simulate_riscv32.log ./
			
			# Comparing simulation result
			diffInfo=`diff $tempDir/${testName}_$SID.result $testDir/$testName.output`
			if [ "${diffInfo}x" != x ]
			then 
				mailFormat=SIM_WRONG_RESULT
				echo "Error: Simulation result mismatch with \"${testName}.output\"" >> $logDir/riscv32.rep
				echo "[`date`][$SID] Simulation result mismatch for student[$stuID] with \"${testName}.output\""
				return
			fi
		done
		echo "Congratulations! You have passed the test for lab-riscv32!" >> $logDir/riscv32.rep
		mailFormat=TEST_PASS
	else mailFormat=0
	fi
}

if [ ! -d $installPath ]
then 
	echo "<Error> Minic Checker root directory not found!"
	exit
fi

while [ 1 ]
do
	echo "[`date`][$SID] Start checking homeworks"
	stuList=`checkRun "cat $installPath/config/students.list"`
	for stuID in $stuList
	do
		checkLab
		if [ $mailFormat != 0 ]
		then 
			echo -e "\n  This report was automatically generated by Minic Checker at [`date`]">> $logDir/riscv32.rep
			echo "[`date`][$SID] Check finished. Get status [$mailFormat] for student [$stuID]! Sending email..."
			$installPath/scripts/send_mail $stuID@pku.edu.cn -f $installPath/config/minic_checker.mf -t CHECK RISCV32 $mailFormat
		fi
	done
	sleep $interval
done
